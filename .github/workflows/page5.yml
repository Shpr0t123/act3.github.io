# This is a basic workflow to help you get started with Actions

name: CI-page5

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v1

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt
      - name: Make output folder
        run: mkdir output
      - name: Clone master branch
        run: git clone "https://${{ secrets.ACCESS_TOKEN }}@github.com/${GITHUB_ACTOR}/${GITHUB_ACTOR}.github.io.git" --branch master --single-branch ./output
      - name: Generate static pages
        run: pelican content -o output -s publishconf.py
      - name: Set git config and add changes
        run: |
            git config --global user.email "${GITHUB_ACTOR}@https://users.noreply.github.com/"
            git config --global user.name "${GITHUB_ACTOR}"
            git add --all
        working-directory: ./output
      - name: Push and send notification
        run: |
            COMMIT_MESSAGE="Update pages on $(date +'%Y-%m-%d %H:%M:%S')"
            git diff-index --quiet --cached HEAD -- && echo "No changes!" && exit 0 || echo $COMMIT_MESSAGE
            # Only if repo have changes
            git commit -m "${COMMIT_MESSAGE}"
            git push https://${{ secrets.ACCESS_TOKEN }}@github.com/${GITHUB_ACTOR}/${GITHUB_ACTOR}.github.io.git master
        working-directory: ./outpu
